import java.io.IOException;
import java.util.Random;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

public class StartGame {
    static JButton[][] buttons = new JButton[8][8];
	ButtonMethods.Showhuman showh = new ButtonMethods.Showhuman();
	public static void main(String[] args) throws IOException, InterruptedException 
	{
		new StartGame();
	}
	public StartGame () throws IOException, InterruptedException {
		setup(); 		//Setting up the JButton array
		int limit = 10; //Limits the rounds/turns of the player and computer
		for(int i=1;i<limit;i++)
		{
		System.out.println("It is Round Number:" +i);
		Playerturn();//Starting a player turn as well as the limit of moves
		Computerturn();	//Starting the computer turn 
		}
	}
	void setup() {
		for(int i=0;i<8;i++) {
			for(int j=0;j<8;j++) {
				buttons[i][j] = ButtonMethods.retbutton(i,j); //Filling the JButton array
			}
		}
	}
	void Playerturn() throws InterruptedException {
		int moves = 3; //Limit for moves
		ButtonMethods.counter = 0;
		for(int i=0;i<8;i++)
		{
			for(int j=0;j<8;j++)
			{
				if(buttons[i][j].getIcon() == ButtonMethods.human) {
					buttons[i][j].addActionListener(showh); //Enables the buttons with the humans
					buttons[i][j].setEnabled(true);
				}
			}
		}
		for(int i = 0; i<100;i++)
		{
			if(ButtonMethods.counter == moves) //Limits the turns/moves
			{
				endplayerturn();
				break;
			}
			else
			{
				Thread.sleep(250);
			}
		}
	}
	void Computerturn() throws InterruptedException {
		Random rand = new Random();
			for(int i = 0;i<8;i++) {
				for(int j = 0;j<8;j++)
				{
					if(buttons[i][j].getIcon() == ButtonMethods.alien) {
						Thread.sleep(1000);
						int x = rand.nextInt(5)-2;
						int y = rand.nextInt(5)-2;
						if(i+x >7 || i+x <0 || j+y >7 || j+y <0)
						{
							break;
						}
						else
						{
							if(buttons[i+x][j+y].getIcon() == ButtonMethods.alien)
							{
								
							}
							else
							{
							buttons[i+x][j+y].setIcon(ButtonMethods.alien);
							buttons[i+x][j+y].setVisible(true);
							buttons[i][j].setIcon(null);
							buttons[i][j].setVisible(false);
							break;
							}
						}
					}
				}
			}
		}
	
	void endplayerturn() {
		System.out.println("Playerturn ended");
		for(int i = 0;i<8;i++) {
			for(int j = 0;j<8;j++) {
				if(buttons[i][j].getIcon() == ButtonMethods.human) {
				buttons[i][j].setEnabled(false); //Disabling the buttons if limit is reached
				}
			}
		}
	}
}
